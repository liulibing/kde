From patchwork Wed Mar 20 08:12:28 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: "Suthikulpanit,
 Suravee" <Suravee.Suthikulpanit@amd.com>
X-Patchwork-Id: 10860971
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 015E917E9
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 20 Mar 2019 08:12:39 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id DBA2C28C28
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 20 Mar 2019 08:12:38 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id CFE8329A87; Wed, 20 Mar 2019 08:12:38 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8C39128C28
	for <patchwork-kvm@patchwork.kernel.org>;
 Wed, 20 Mar 2019 08:12:37 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727699AbfCTIMb (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 20 Mar 2019 04:12:31 -0400
Received: from mail-eopbgr800077.outbound.protection.outlook.com
 ([40.107.80.77]:44539
        "EHLO NAM03-DM3-obe.outbound.protection.outlook.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1727573AbfCTIMb (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 20 Mar 2019 04:12:31 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=amdcloud.onmicrosoft.com; s=selector1-amd-com;
 h=From:Date:Subject:Message-ID:Content-Type:MIME-Version:X-MS-Exchange-SenderADCheck;
 bh=3HUTWye9XtHN1VfOcRKQb1k6/axmCtfvpgq3KLwCgdY=;
 b=IpDX++6ECqIts/xeRwAEv58xTnRXLtSS2iynbzigNW4NNTVj01gdtlYtgwgyW6fYp+SpZtoRDoXwu7eEteQNp+7Hdxt2lJCrPpsh7NfT2OHSdPxe1KWLYAWK5i+lWpANtu0Zqssr87ubhOtlR07yC4p5a1MupfpOF6lrgTJX7Hw=
Received: from DM6PR12MB2844.namprd12.prod.outlook.com (20.176.117.96) by
 DM6PR12MB3611.namprd12.prod.outlook.com (20.178.199.85) with Microsoft SMTP
 Server (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.20.1709.14; Wed, 20 Mar 2019 08:12:28 +0000
Received: from DM6PR12MB2844.namprd12.prod.outlook.com
 ([fe80::3589:a066:e1d:b1f0]) by DM6PR12MB2844.namprd12.prod.outlook.com
 ([fe80::3589:a066:e1d:b1f0%5]) with mapi id 15.20.1709.015; Wed, 20 Mar 2019
 08:12:28 +0000
From: "Suthikulpanit, Suravee" <Suravee.Suthikulpanit@amd.com>
To: "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>
CC: "joro@8bytes.org" <joro@8bytes.org>,
        "pbonzini@redhat.com" <pbonzini@redhat.com>,
        "rkrcmar@redhat.com" <rkrcmar@redhat.com>,
        "Suthikulpanit, Suravee" <Suravee.Suthikulpanit@amd.com>
Subject: [PATCH] Revert "svm: Fix AVIC incomplete IPI emulation"
Thread-Topic: [PATCH] Revert "svm: Fix AVIC incomplete IPI emulation"
Thread-Index: AQHU3vSoF/6SczcFzECLQBUaeLu7Kg==
Date: Wed, 20 Mar 2019 08:12:28 +0000
Message-ID: <20190320081158.2442-1-suravee.suthikulpanit@amd.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [171.96.73.208]
x-clientproxiedby: SG2PR0601CA0006.apcprd06.prod.outlook.com (2603:1096:3::16)
 To DM6PR12MB2844.namprd12.prod.outlook.com (2603:10b6:5:45::32)
authentication-results: spf=none (sender IP is )
 smtp.mailfrom=Suravee.Suthikulpanit@amd.com;
x-ms-exchange-messagesentrepresentingtype: 1
x-mailer: git-send-email 2.17.1
x-ms-publictraffictype: Email
x-ms-office365-filtering-correlation-id: 6e3ce367-02a9-41e5-63f7-08d6ad0bcac9
x-ms-office365-filtering-ht: Tenant
x-microsoft-antispam: 
 BCL:0;PCL:0;RULEID:(2390118)(7020095)(4652040)(8989299)(4534185)(4627221)(201703031133081)(201702281549075)(8990200)(5600127)(711020)(4605104)(4618075)(2017052603328)(7153060)(7193020);SRVR:DM6PR12MB3611;
x-ms-traffictypediagnostic: DM6PR12MB3611:
x-ms-exchange-purlcount: 1
x-microsoft-antispam-prvs: 
 <DM6PR12MB36113D99FAA0279F0B80BAEDF3410@DM6PR12MB3611.namprd12.prod.outlook.com>
x-forefront-prvs: 098291215C
x-forefront-antispam-report: 
 SFV:NSPM;SFS:(10009020)(366004)(396003)(39860400002)(376002)(136003)(346002)(199004)(189003)(305945005)(6506007)(25786009)(2906002)(72206003)(7736002)(386003)(50226002)(5660300002)(8936002)(14444005)(66574012)(256004)(68736007)(102836004)(26005)(53936002)(71190400001)(186003)(71200400001)(86362001)(6116002)(2616005)(476003)(14454004)(1076003)(66066001)(3846002)(486006)(97736004)(966005)(36756003)(4326008)(81156014)(6436002)(110136005)(6486002)(54906003)(52116002)(99286004)(478600001)(105586002)(8676002)(316002)(81166006)(106356001)(6512007)(2501003)(6306002);DIR:OUT;SFP:1101;SCL:1;SRVR:DM6PR12MB3611;H:DM6PR12MB2844.namprd12.prod.outlook.com;FPR:;SPF:None;LANG:en;PTR:InfoNoRecords;A:1;MX:1;
received-spf: None (protection.outlook.com: amd.com does not designate
 permitted sender hosts)
x-ms-exchange-senderadcheck: 1
x-microsoft-antispam-message-info: 
 QRKYK1igkDQlk5smwD/3cuuB0lJ8Mm+EnAXecWKOrzSKA8dTYXW+3v7Xg7pIYC8Vv8qQNokyjbgDtio1Uwegv5RlFsAsuPI4r+VCdGevLSF1ZwHTaB4vKz2xsRPCZcyMwHqWViQUaw5Zyxnkt5KT1sEvs6xtIjo3pYt2WptxMEKTo6GzmZkSfIMewl2t+45031iecNiMdbLq2D9pNyRnHNxoUoE+ysmys+jArMGzGoiM4fPatpRbqolQgrm+sUUqtwRSf2p9RgHbLn7MPnl7R+0Z4hfGFSzcAE5m2xxOH4uvQE0kGPhH9Thde85lnGTkISMAV+ClM0t71/cof/TPP6PdlOISt3XA0nLqmcr33hvgApDOgYadU8V/MC4OtfIMDwI+VJnWqzZV8CPjsJRXDM3m5x2rZtWYapbeVHGuAz4=
Content-Type: text/plain; charset="utf-8"
Content-ID: <76B7D08EC551CE4E892E99DF94A181AF@namprd12.prod.outlook.com>
MIME-Version: 1.0
X-OriginatorOrg: amd.com
X-MS-Exchange-CrossTenant-Network-Message-Id: 
 6e3ce367-02a9-41e5-63f7-08d6ad0bcac9
X-MS-Exchange-CrossTenant-originalarrivaltime: 20 Mar 2019 08:12:28.3759
 (UTC)
X-MS-Exchange-CrossTenant-fromentityheader: Hosted
X-MS-Exchange-CrossTenant-id: 3dd8961f-e488-4e60-8e11-a82d994e183d
X-MS-Exchange-CrossTenant-mailboxtype: HOSTED
X-MS-Exchange-Transport-CrossTenantHeadersStamped: DM6PR12MB3611
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

This reverts commit bb218fbcfaaa3b115d4cd7a43c0ca164f3a96e57.

As Oren Twaig pointed out the old discussion:

  https://patchwork.kernel.org/patch/8292231/

that the change coud potentially cause an extra IPI to be sent to
the destination vcpu because the AVIC hardware already set the IRR bit
before the incomplete IPI #VMEXIT with id=1 (target vcpu is not running).
Since writting to ICR and ICR2 will also set the IRR. If something triggers
the destination vcpu to get scheduled before the emulation finishes, then
this could result in an additional IPI.

Also, the issue mentioned in the commit bb218fbcfaaa was misdiagnosed.

Cc: Radim Krčmář <rkrcmar@redhat.com>
Cc: Paolo Bonzini <pbonzini@redhat.com>
Reported-by: Oren Twaig <oren@scalemp.com>
Signed-off-by: Suravee Suthikulpanit <suravee.suthikulpanit@amd.com>
---
 arch/x86/kvm/svm.c | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index f13a3a24d360..47c4993448c7 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -4512,14 +4512,25 @@ static int avic_incomplete_ipi_interception(struct vcpu_svm *svm)
 		kvm_lapic_reg_write(apic, APIC_ICR, icrl);
 		break;
 	case AVIC_IPI_FAILURE_TARGET_NOT_RUNNING: {
+		int i;
+		struct kvm_vcpu *vcpu;
+		struct kvm *kvm = svm->vcpu.kvm;
 		struct kvm_lapic *apic = svm->vcpu.arch.apic;
 
 		/*
-		 * Update ICR high and low, then emulate sending IPI,
-		 * which is handled when writing APIC_ICR.
+		 * At this point, we expect that the AVIC HW has already
+		 * set the appropriate IRR bits on the valid target
+		 * vcpus. So, we just need to kick the appropriate vcpu.
 		 */
-		kvm_lapic_reg_write(apic, APIC_ICR2, icrh);
-		kvm_lapic_reg_write(apic, APIC_ICR, icrl);
+		kvm_for_each_vcpu(i, vcpu, kvm) {
+			bool m = kvm_apic_match_dest(vcpu, apic,
+						     icrl & KVM_APIC_SHORT_MASK,
+						     GET_APIC_DEST_FIELD(icrh),
+						     icrl & KVM_APIC_DEST_MASK);
+
+			if (m && !avic_vcpu_is_running(vcpu))
+				kvm_vcpu_wake_up(vcpu);
+		}
 		break;
 	}
 	case AVIC_IPI_FAILURE_INVALID_TARGET:
