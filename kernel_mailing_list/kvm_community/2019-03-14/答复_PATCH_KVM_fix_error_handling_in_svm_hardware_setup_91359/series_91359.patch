From patchwork Thu Mar 14 01:29:30 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Patchwork-Submitter: Li RongQing <lirongqing@baidu.com>
X-Patchwork-Id: 10852049
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 7F4051575
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 14 Mar 2019 01:45:20 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 6178329E91
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 14 Mar 2019 01:45:20 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 5475829EB5; Thu, 14 Mar 2019 01:45:20 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-7.9 required=2.0 tests=BAYES_00,MAILING_LIST_MULTI,
	RCVD_IN_DNSWL_HI autolearn=ham version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 77E3C29E91
	for <patchwork-kvm@patchwork.kernel.org>;
 Thu, 14 Mar 2019 01:45:19 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726556AbfCNBpS (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Wed, 13 Mar 2019 21:45:18 -0400
Received: from mx22.baidu.com ([220.181.50.185]:54164 "EHLO baidu.com"
        rhost-flags-OK-OK-OK-FAIL) by vger.kernel.org with ESMTP
        id S1726487AbfCNBpR (ORCPT <rfc822;kvm@vger.kernel.org>);
        Wed, 13 Mar 2019 21:45:17 -0400
X-Greylist: delayed 941 seconds by postgrey-1.27 at vger.kernel.org;
 Wed, 13 Mar 2019 21:45:15 EDT
Received: from M1-MAIL-EX16.internal.baidu.com (unknown [10.44.89.56])
        by Forcepoint Email with ESMTPS id EC1819187DC95;
        Thu, 14 Mar 2019 09:29:30 +0800 (CST)
Received: from BC-Mail-Ex15.internal.baidu.com (172.31.40.51) by
 M1-MAIL-EX16.internal.baidu.com (10.44.89.56) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id
 15.1.1531.3; Thu, 14 Mar 2019 09:29:31 +0800
Received: from BC-Mail-Ex13.internal.baidu.com (172.31.40.49) by
 BC-Mail-Ex15.internal.baidu.com (172.31.40.51) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256) id
 15.1.1531.3; Thu, 14 Mar 2019 09:29:31 +0800
Received: from BC-Mail-Ex13.internal.baidu.com ([172.31.40.49]) by
 Bc-Mail-Ex13.internal.baidu.com ([172.31.40.49]) with mapi id 15.01.1531.010;
 Thu, 14 Mar 2019 09:29:30 +0800
From: "Li,Rongqing" <lirongqing@baidu.com>
To: "Singh, Brijesh" <brijesh.singh@amd.com>,
        "x86@kernel.org" <x86@kernel.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>
Subject: =?utf-8?b?562U5aSNOiBbUEFUQ0hdIEtWTTogZml4IGVycm9yIGhhbmRsaW5nIGlu?=
	=?utf-8?b?IHN2bV9oYXJkd2FyZV9zZXR1cA==?=
Thread-Topic: [PATCH] KVM: fix error handling in svm_hardware_setup
Thread-Index: AQHU2KZ83WmASoa/d0SHLlI03fJO3KYJt4iAgACdPlA=
Date: Thu, 14 Mar 2019 01:29:30 +0000
Message-ID: <4d7c1a2b1a1d4a69b5915affa8f34c25@baidu.com>
References: <1552375767-27828-1-git-send-email-lirongqing@baidu.com>
 <eff67393-b1b6-6edb-8aae-58c13679b49a@amd.com>
In-Reply-To: <eff67393-b1b6-6edb-8aae-58c13679b49a@amd.com>
Accept-Language: zh-CN, en-US
Content-Language: zh-CN
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [172.24.150.36]
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

> -----邮件原件-----
> 发件人: kvm-owner@vger.kernel.org [mailto:kvm-owner@vger.kernel.org] 代
> 表 Singh, Brijesh
> 发送时间: 2019年3月13日 23:50
> 收件人: Li,Rongqing <lirongqing@baidu.com>; x86@kernel.org;
> kvm@vger.kernel.org
> 抄送: Singh, Brijesh <brijesh.singh@amd.com>
> 主题: Re: [PATCH] KVM: fix error handling in svm_hardware_setup
> 
...
> > +	if (svm_sev_enabled())
> > +		bitmap_free(sev_asid_bitmap);
> > +
> > +	for_each_possible_cpu(cpu)
> > +		svm_cpu_uninit(cpu);
> > +
> >   	__free_pages(iopm_pages, IOPM_ALLOC_ORDER);
> >   	iopm_base = 0;
> >   	return r;
> >
> 
> 
> Does it make sense to call the svm_hardware_unsetup() instead of duplicating
> the logic in error code path ?
> 

Thanks for your review;

Two thing needs to do if call svm_hardware_unsetup

1. move svm_hardware_unsetup before svm_hardware_setup, to avoid declaration
2. remove __exit attribute for svm_hardware_unsetup , otherwise these is the below warning:

              WARNING: arch/x86/kvm/kvm-amd.o(.init.text+0x4aa): Section mismatch in reference from the function svm_hardware_setup() to         the function .exit.text:svm_hardware_unsetup()
              The function __init svm_hardware_setup() references
              a function __exit svm_hardware_unsetup().
              This is often seen when error handling in the init function
              uses functionality in the exit path.
              The fix is often to remove the __exit annotation of
              svm_hardware_unsetup() so it may be used outside an exit section.


The RFC is below:



-RongQing




> thanks
Reviewed-by: Brijesh Singh <brijesh.singh@amd.com>

diff --git a/arch/x86/kvm/svm.c b/arch/x86/kvm/svm.c
index 1787a484d21c..276ab8ab6c95 100644
--- a/arch/x86/kvm/svm.c
+++ b/arch/x86/kvm/svm.c
@@ -1290,6 +1290,20 @@ static void shrink_ple_window(struct kvm_vcpu *vcpu)
                                    control->pause_filter_count, old);
 }
 
+static void svm_hardware_unsetup(void)
+{
+       int cpu;
+
+       if (svm_sev_enabled())
+               bitmap_free(sev_asid_bitmap);
+
+       for_each_possible_cpu(cpu)
+               svm_cpu_uninit(cpu);
+
+       __free_pages(pfn_to_page(iopm_base >> PAGE_SHIFT), IOPM_ALLOC_ORDER);
+       iopm_base = 0;
+}
+
 static __init int svm_hardware_setup(void)
 {
        int cpu;
@@ -1396,25 +1410,10 @@ static __init int svm_hardware_setup(void)
        return 0;
 
 err:
-       __free_pages(iopm_pages, IOPM_ALLOC_ORDER);
-       iopm_base = 0;
+       svm_hardware_unsetup();
        return r;
 }
 
-static __exit void svm_hardware_unsetup(void)
-{
-       int cpu;
-
-       if (svm_sev_enabled())
-               bitmap_free(sev_asid_bitmap);
-
-       for_each_possible_cpu(cpu)
-               svm_cpu_uninit(cpu);
-
-       __free_pages(pfn_to_page(iopm_base >> PAGE_SHIFT), IOPM_ALLOC_ORDER);
-       iopm_base = 0;
-}
-
 static void init_seg(struct vmcb_seg *seg)
 {
        seg->selector = 0;
