From patchwork Mon Feb 25 08:53:32 2019
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
X-Patchwork-Submitter: Anton Kuchin <antonkuchin@yandex-team.ru>
X-Patchwork-Id: 10828357
Return-Path: <kvm-owner@kernel.org>
Received: from mail.wl.linuxfoundation.org (pdx-wl-mail.web.codeaurora.org
 [172.30.200.125])
	by pdx-korg-patchwork-2.web.codeaurora.org (Postfix) with ESMTP id 9F055922
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Feb 2019 08:53:52 +0000 (UTC)
Received: from mail.wl.linuxfoundation.org (localhost [127.0.0.1])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id 8CFE22A434
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Feb 2019 08:53:52 +0000 (UTC)
Received: by mail.wl.linuxfoundation.org (Postfix, from userid 486)
	id 7D0492A8E0; Mon, 25 Feb 2019 08:53:52 +0000 (UTC)
X-Spam-Checker-Version: SpamAssassin 3.3.1 (2010-03-16) on
	pdx-wl-mail.web.codeaurora.org
X-Spam-Level: 
X-Spam-Status: No, score=-8.0 required=2.0 tests=BAYES_00,DKIM_SIGNED,
	DKIM_VALID,DKIM_VALID_AU,MAILING_LIST_MULTI,RCVD_IN_DNSWL_HI autolearn=ham
	version=3.3.1
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.wl.linuxfoundation.org (Postfix) with ESMTP id E9DFD2A434
	for <patchwork-kvm@patchwork.kernel.org>;
 Mon, 25 Feb 2019 08:53:51 +0000 (UTC)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726267AbfBYIxt (ORCPT
        <rfc822;patchwork-kvm@patchwork.kernel.org>);
        Mon, 25 Feb 2019 03:53:49 -0500
Received: from forwardcorp1g.cmail.yandex.net ([87.250.241.190]:36581 "EHLO
        forwardcorp1g.cmail.yandex.net" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1725863AbfBYIxt (ORCPT
        <rfc822;kvm@vger.kernel.org>); Mon, 25 Feb 2019 03:53:49 -0500
Received: from mxbackcorp1g.mail.yandex.net (mxbackcorp1g.mail.yandex.net
 [IPv6:2a02:6b8:0:1402::301])
        by forwardcorp1g.cmail.yandex.net (Yandex) with ESMTP id D8DA22176E;
        Mon, 25 Feb 2019 11:53:45 +0300 (MSK)
Received: from smtpcorp1j.mail.yandex.net (smtpcorp1j.mail.yandex.net
 [2a02:6b8:0:1619::137])
        by mxbackcorp1g.mail.yandex.net (nwsmtp/Yandex) with ESMTP id
 xrRqIPkfjZ-rjHOvEC1;
        Mon, 25 Feb 2019 11:53:45 +0300
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yandex-team.ru;
 s=default;
        t=1551084825; bh=r4tZSba7hWVlgSIZ+IwH+L5iyoP+pSn5hWIMG6isK04=;
        h=In-Reply-To:Message-Id:References:Date:Subject:To:From:Cc;
        b=10tmxND/Y5REd9141k28Lw/OYz8s4SGAQeD61zyNEyePTMJFLzekhPCx4B/LneERQ
         bSeJP+ikQRayr6bckMufVvbwF6mw7AYEpT+1EsTmjOLOfv/wGpcx11RaNsGxFgYztA
         WmZvjLgWIxAVYAkO6UMHpslt1g71DSNCqDvoS5qg=
Authentication-Results: mxbackcorp1g.mail.yandex.net;
 dkim=pass header.i=@yandex-team.ru
Received: from dynamic-red.dhcp.yndx.net (dynamic-red.dhcp.yndx.net
 [2a02:6b8:0:408:250:b6ff:fe97:2682])
        by smtpcorp1j.mail.yandex.net (nwsmtp/Yandex) with ESMTPSA id
 Rz5LMEgQlz-rjLSvsEr;
        Mon, 25 Feb 2019 11:53:45 +0300
        (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
        (Client certificate not present)
From: Anton Kuchin <antonkuchin@yandex-team.ru>
To: Paolo Bonzini <pbonzini@redhat.com>, kvm@vger.kernel.org
Cc: Evgeny Yakovlev <wrfsh@yandex-team.ru>,
        Krish Sadhukhan <krish.sadhukhan@oracle.com>,
        Anton Kuchin <antonkuchin@yandex-team.ru>
Subject: [PATCH kvm-unit-tests] Fix merge of "Check Host Control Registers on
 vmentry of L2 guests"
Date: Mon, 25 Feb 2019 11:53:32 +0300
Message-Id: <20190225085332.27400-1-antonkuchin@yandex-team.ru>
X-Mailer: git-send-email 2.19.1
In-Reply-To: <f1821060-f4b1-ba5b-450a-ed0fdec25fb7@redhat.com>
References: <f1821060-f4b1-ba5b-450a-ed0fdec25fb7@redhat.com>
MIME-Version: 1.0
Sender: kvm-owner@vger.kernel.org
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org
X-Virus-Scanned: ClamAV using ClamSMTP

Add hunk that was acceped but lost during merge

Fixes: 1868c05a (Check Host Control Registers on vmentry of L2 guests)
Signed-off-by: Krish Sadhukhan <krish.sadhukhan@oracle.com>
Signed-off-by: Anton Kuchin <antonkuchin@yandex-team.ru>
---
 x86/vmx_tests.c | 51 +++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)

diff --git a/x86/vmx_tests.c b/x86/vmx_tests.c
index 239cb74..3b2f4f0 100644
--- a/x86/vmx_tests.c
+++ b/x86/vmx_tests.c
@@ -5089,6 +5089,57 @@ static void vmx_controls_test(void)
 	test_vm_entry_ctls();
 }
 
+static void test_ctl_reg(const char *cr_name, u64 cr, u64 fixed0, u64 fixed1)
+{
+	u64 val;
+	u64 cr_saved = vmcs_read(cr);
+	int i;
+
+	val = fixed0 & fixed1;
+	if (cr == HOST_CR4)
+		vmcs_write(cr, val | X86_CR4_PAE);
+	else
+		vmcs_write(cr, val);
+	report_prefix_pushf("%s %lx", cr_name, val);
+	if (val == fixed0)
+		test_vmx_vmlaunch(0, false);
+	else
+		test_vmx_vmlaunch(VMXERR_ENTRY_INVALID_HOST_STATE_FIELD,
+				  false);
+	report_prefix_pop();
+
+	for (i = 0; i < 64; i++) {
+
+		/* Set a bit when the corresponding bit in fixed1 is 0 */
+		if ((fixed1 & (1ull << i)) == 0) {
+			if (cr == HOST_CR4 && ((1ull << i) & X86_CR4_SMEP ||
+					       (1ull << i) & X86_CR4_SMAP))
+				continue;
+
+			vmcs_write(cr, cr_saved | (1ull << i));
+			report_prefix_pushf("%s %llx", cr_name,
+						cr_saved | (1ull << i));
+			test_vmx_vmlaunch(
+					VMXERR_ENTRY_INVALID_HOST_STATE_FIELD,
+					false);
+			report_prefix_pop();
+		}
+
+		/* Unset a bit when the corresponding bit in fixed0 is 1 */
+		if (fixed0 & (1ull << i)) {
+			vmcs_write(cr, cr_saved & ~(1ull << i));
+			report_prefix_pushf("%s %llx", cr_name,
+						cr_saved & ~(1ull << i));
+			test_vmx_vmlaunch(
+					VMXERR_ENTRY_INVALID_HOST_STATE_FIELD,
+					false);
+			report_prefix_pop();
+		}
+	}
+
+	vmcs_write(cr, cr_saved);
+}
+
 /*
  * 1. The CR0 field must not set any bit to a value not supported in VMX
  *    operation.
